name: Run Docker

# Controls when the workflow will run
on:
  push:
    branches:
      - 'master'
      - 'v*.x'
    tags:
      - 'v*'
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
permissions:
  contents: read
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get current date in NST
        run: echo "CURRENT_DATE_NST=$(date +'%Y%m%d-%H%M%S' -d '-3 hours -30 minutes')" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}.x
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch,enable=${{ github.event.repository.default_branch != github.ref }}
            type=raw,value=${{ env.CURRENT_DATE_NST }}
          flavor: |
            latest=true

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: var-cache-node-modules
          key: var-cache-node-modules-${{ hashFiles('Dockerfile', 'install/package.json') }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v6
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=min
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
