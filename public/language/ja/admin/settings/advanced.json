{
	"maintenance-mode": "メンテナンスモード",
	"maintenance-mode.help": "フォーラムがメンテナンスモードの場合、すべてのリクエストは静的な一時ページにリダイレクトされます。管理者はこのリダイレクトから免除され、通常のサイトにアクセスできます。",
	"maintenance-mode.status": "Maintenance Mode Status Code",
	"maintenance-mode.message": "メンテナンスメッセージ",
	"maintenance-mode.groups-exempt-from-maintenance-mode": "Select groups that should be exempt from maintenance mode",
	"headers": "ヘッダー",
	"headers.allow-from": "NodeBBをインラインフレーム内に配置するようALLOW-FROMを設定する",
	"headers.csp-frame-ancestors": "Set Content-Security-Policy frame-ancestors header to Place NodeBB in an iFrame",
	"headers.csp-frame-ancestors-help": "'none', 'self'(default) or list of URIs to allow.",
	"headers.powered-by": "NodeBBから送信された「Powered By」ヘッダーをカスタマイズする",
	"headers.acao": "アクセス-制御-有効-原点",
	"headers.acao-regex": "Access-Control-Allow-Origin Regular Expression",
	"headers.acao-help": "すべてのサイトへのアクセスを拒否する場合、空のままにしておいてください。",
	"headers.acao-regex-help": "Enter regular expressions here to match dynamic origins. To deny access to all sites, leave empty",
	"headers.acac": "Access-Control-Allow-Credentials",
	"headers.acam": "アクセス-制御-有効-メソッド",
	"headers.acah": "アクセス-制御-有効-ヘッダー",
	"headers.coep": "Cross-Origin-Embedder-Policy",
	"headers.coep-help": "When enabled (default), will set the header to <code>require-corp</code>",
	"headers.coop": "Cross-Origin-Opener-Policy",
	"headers.corp": "Cross-Origin-Resource-Policy",
	"headers.permissions-policy": "Permissions-Policy",
	"headers.permissions-policy-help": "Allows setting permissions policy header, for example \"geolocation=*, camera=()\", see <a href=\"https://github.com/w3c/webappsec-permissions-policy/blob/main/permissions-policy-explainer.md\">this</a> for more info.",
	"hsts": "Strict Transport Security",
	"hsts.enabled": "Enabled HSTS (recommended)",
	"hsts.maxAge": "HSTS Max Age",
	"hsts.subdomains": "Include subdomains in HSTS header",
	"hsts.preload": "Allow preloading of HSTS header",
	"hsts.help": "If enabled, an HSTS header will be set for this site. You can elect to include subdomains and preloading flags in your header. If in doubt, you can leave these unchecked. <a href=\"%1\">More information <i class=\"fa fa-external-link\"></i></a>",
	"traffic-management": "トラフィック管理",
	"traffic.help": "NodeBB uses a module that automatically denies requests in high-traffic situations. You can tune these settings here, although the defaults are a good starting point.",
	"traffic.enable": "トラフィック管理を有効にする",
	"traffic.event-lag": "イベントループの場所のしきい値(ミリ秒単位)",
	"traffic.event-lag-help": "この値を下げるとページの読み込み時間が短縮されますが、さらに多くのユーザーには「過剰な読み込み」メッセージが表示されます。(再起動が必要)",
	"traffic.lag-check-interval": "チェック間隔(ミリ秒単位)",
	"traffic.lag-check-interval-help": "この値を小さくすると、NodeBBは負荷のスパイクに対してより敏感になりますが、チェックが過敏になる可能性もあります。(再起動が必要)",

	"sockets.settings": "WebSocket Settings",
	"sockets.max-attempts": "Max Reconnection Attempts",
	"sockets.default-placeholder": "Default: %1",
	"sockets.delay": "Reconnection Delay",

	"compression.settings": "Compression Settings",
	"compression.enable": "Enable Compression",
	"compression.help": "This setting enables gzip compression. For a high-traffic website in production, the best way to put compression in place is to implement it at a reverse proxy level. You can enable it here for testing purposes."
}