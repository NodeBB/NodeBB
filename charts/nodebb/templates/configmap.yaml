apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "nodebb.fullname" . }}
data: 
  config.user.json: |
    {{ .Values.nodebb.configYaml | toJson }}
  config.managed.json: |
    {
      "upload_path": "/usr/src/app/public/uploads",
      "isCluster": {{ .Values.nodebb.singleMode | not }},
      "url": {{ printf (ternary "https://%s" "http://%s" .Values.nodebb.tls) .Values.nodebb.domain | quote }}
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "nodebb.fullname" . }}-config-init-script
data: 
  config.sh: |-
    #!/bin/sh
    echo "Generated config:"
    jq -s 'def deepmerge(a;b):
      reduce b[] as $item (a;
      reduce ($item | keys_unsorted[]) as $key (.;
      $item[$key] as $val | ($val | type) as $type | .[$key] = if ($type == "object") then
              deepmerge({}; [if .[$key] == null then {} else .[$key] end, $val])
      elif ($type == "array") then
              (.[$key] + $val | unique)
      else
              $val
      end)
      );
      deepmerge({}; .)' /secrets/admin.json /secrets/database.json /configmaps/config.managed.json /configmaps/config.user.json | tee /opt/config/config.json
  setup.sh: |-
    #!/bin/bash

    export CONFIG_DIR="${CONFIG_DIR:-/opt/config}"
    export CONFIG=$CONFIG_DIR/config.json

    # Setup variable for backward compatibility, default: <empty>
    export SETUP="${SETUP:-}"

    mkdir -p $CONFIG_DIR

    # if the folder is mounted as a volume this can fail, the check below is to ensure there is still write access
    chmod -fR 760 $CONFIG_DIR 2> /dev/null

    if [[ ! -w $CONFIG_DIR ]]; then
      echo "panic: no write permission for $CONFIG_DIR"
      exit 1
    fi

    [[ -f $CONFIG_DIR/package.json ]] || cp install/package.json $CONFIG_DIR/package.json
    [[ -f $CONFIG_DIR/package-lock.json ]] || touch $CONFIG_DIR/package-lock.json

    ln -fs $CONFIG_DIR/package.json package.json
    ln -fs $CONFIG_DIR/package-lock.json package-lock.json

    echo "Running npm install"
    npm install --omit=dev
    echo "npm install finished"

    if [[ -f $CONFIG ]]; then
      echo "Setting up forum using config file at $CONFIG"
      node app --setup="$(cat /opt/config/config.json)"
    else
      echo "Config file not found at $CONFIG"
      exit 1
    fi